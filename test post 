[ID: 42]
[Tags: testTag1 Testtag2]
[Title: test post #2 ]
[WriteTime: ]
[ImageNames: ]

## Contents

1. Preamble
2. 원인분석 #1 : ArgoCD Deployment
3. 원인분석 #2 : Golang Version
4. 원인분석 #3 : Compile Daemon
5. 원인분석 #4 : Golang third-party Packages
6. 원인분석 #5 : Linux top Command
7. GOMAXPROCS
8. Script Test
9. Dockerizing Test
10. Summary
11. Retrospect

## Preamble


MSA 프로젝트 개발환경을 구성하다가 CPU usage가 100%에 도달하는 이슈가 생겼다.

![image](https://res.craft.do/user/full/6deb5b3a-d995-5f97-e85b-e7c3c5f9702a/doc/6F00E7BD-5F76-41C0-9DE7-6737CFDECBC6/98FCD007-723B-4C77-80DA-FA06CC4C1716_2/4plvpKSW3rc0SC18Vmh7rDzJBUr1BbxxMRZgXS5Toxkz/%202023-09-23%20%205.19.37.png)

CPU 사용률이 100%에 도달한다고는 하지만 CPU 온도는 평소에는 30~40도를 유지하고 있었고, 로컬 클러스터를 생성하고 초기 Pod들을 배포할 때만 피크가 70도대로 10초 정도 올라갔다 내려오는 상황이었기 때문에, 크게 심각한 상황은 아니었다.

게다가 M2 Pro의 쓰로틀링은 108도이기 때문에, 이대로 놔둔다고 해도 CPU의 성능이나 수명에 나쁜 영향을 주지는 않을 것이었다.

다만 로컬의 CPU가 10코어이며, 아직 본격적인 개발을 이루어지지 않은 상태인데도 불구하고, CPU 사용률이 100%가 된다는 것은 뭔가 내부적으로 이슈가 있는 것이 아닌가 하는 생각이 들었다.

이후에 구현이 이루어지면서 더 늘어날 리소스 사용량까지 생각해서 미리 원인을 찾고 해결하기로 했다.

## 원인분석 #1 : ArgoCD Deployment


아래는 초기 개발환경 구성을 위한 스크립트 일부이다.

![image](https://res.craft.do/user/full/6deb5b3a-d995-5f97-e85b-e7c3c5f9702a/doc/6F00E7BD-5F76-41C0-9DE7-6737CFDECBC6/E32FAA8A-DA69-4652-87EB-F7AAF866AF0E_2/ILxZiLYZx9fEZnTmN5kBJykKHG2nrxae09q94nXhEicz/%202023-09-23%20%203.44.53.png)

스크립트가 끝나갈 때 CPU가 많이 쓰이는 걸 확인했고, 가장 마지막에 배포되는 ArgoCD에 원인이 있겠다고 판단했다.

![image](https://res.craft.do/user/full/6deb5b3a-d995-5f97-e85b-e7c3c5f9702a/doc/6F00E7BD-5F76-41C0-9DE7-6737CFDECBC6/84A35E04-2731-47BE-85FC-E99923C439FD_2/yPtZZ6rQ4syZ7Nk1ZfGW3LxEngajxAr4Tq7V4fDEZL4z/Image.png)

위 사진은 ArgoCD 매니페스트의 일부이다. 보는 것처럼 20530줄이나 되는 상대적으로 큰 파일이다.

20530줄의 코드에 들어있는 수많은 쿠버네티스 오브젝트를 생성하느라 CPU를 많이 사용한다고 생각하고, 스크립트에서 argoCD Pod의 배포 라인을 제외하고 다시 스크립트를 수행해보았지만 변함없이 CPU는 이전과 유사한 사용률과 온도를 기록하고있었다.